// WARNING: Do not edit this file
// Use it in your refactored code as black box.
// You are allowed to move this whereever you want (another process, other thread, other file, etc)
// but it needs to be used the business logic.

type PromotionType = 'FOREVER' | 'TEMPORARY';

type Promotion = {
	start_date: Date,
	end_date: Date,
	type: PromotionType,
	images: Buffer[],
};

export function getPromotionInstance(id: number): Promise<Promotion | null> {
	if (id !== 42) return Promise.resolve(null);

	return Promise.resolve({
		start_date: new Date('2018-07-25'),
		end_date: new Date('2021-07-25'),
		type: 'FOREVER' as PromotionType,
		images: new Array(12).fill(Buffer.from('image1')),
	});
}

export function resizeImage(image: Buffer): Buffer {
	const date = new Date();

	while ( (new Date()).getTime() - date.getTime() < 500 ) {}

	return image;
}

export function submitToGoogle(data: Promotion) {
	return submit();
}

export function submitToFacebook(data: Promotion) {
	return submit();
}

export function submitToYellowPages(data: Promotion) {
	return submit();
}

function submit(): Promise<{message: 'submitted'}> {
	return new Promise((resolve, reject) => {
		const chance = Math.random();

		if (chance > 0.8) {
			reject({error: 'Internal Error'});
		}

		return resolve({message: 'submitted'});
	});
}
